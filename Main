import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
class Node {
    int data;
    Node next;
    Node(int x) {
        data = x;
        next = null;
    }
}
class Solution {
    public Node addOne(Node head) {
        Node num = reverse(head);
        Node rev = num;
        int sum = num.data + 1;
        int carry = sum / 10;
        num.data = sum % 10;
        while (carry > 0) {
            if (num.next == null)
                num.next = new Node(0);
            num = num.next;
            sum = num.data + carry;
            num.data = sum % 10;
            carry = sum / 10;
        }
        return reverse(rev);
    }
    private Node reverse(Node head) {
        Node prev = null;
        Node curr = head;
        Node next;
        while (curr != null) {
            next = curr.next;
            curr.next = prev;
            prev = curr;
            curr = next;
        }
        return prev;
    }
}
public class GfG { 
    public static void printList(Node node) {
        while (node != null) {
            System.out.print(node.data);
            node = node.next;
        }
        System.out.println();
    }
    public static void main(String[] args) throws IOException {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());
        while (t-- > 0) {
            String[] str = read.readLine().trim().split(" ");
            int n = str.length;
            Node head = new Node(Integer.parseInt(str[0]));
            Node tail = head;
            for (int i = 1; i < n; i++) {
                tail.next = new Node(Integer.parseInt(str[i]));
                tail = tail.next;
            }
            Solution obj = new Solution();
            head = obj.addOne(head);

            printList(head);
        }
    }
}
